package org.domiot.entities;

import jakarta.persistence.CascadeType;
import jakarta.persistence.Column;
import jakarta.persistence.Convert;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;
import java.util.Date;
import org.domiot.entities.conversion.MeasurementTypeConverter;

/**
 * A Measurement is a single information item that is produced by the LNB domotics system. The id field value is generated by
 * the database.
 */
@Entity
@Table(name = "sensorvalues")
public class SensorValueEntity {

  @Id
  @GeneratedValue(strategy = GenerationType.IDENTITY)
  @Column(name = "id", updatable = false, nullable = false)
  private int id;

  @ManyToOne(cascade = {CascadeType.ALL})
  private SensorEntity sensorEntity;

  @Temporal(value = TemporalType.TIMESTAMP)
  private Date timeStamp;

  @Convert(converter = MeasurementTypeConverter.class)
  private MeasurementType measurementType;

  private double value;

  /**
   * Default constructor required for JPA
   */
  public SensorValueEntity() {
  }

  /**
   * Constructor.
   *
   * @param sensorEntity    Sensor as stored in database
   * @param timeStamp       The time of occurrence
   * @param measurementType Type of measurement as known in database
   * @param value           The value of the measurement
   */
  public SensorValueEntity(SensorEntity sensorEntity, Date timeStamp,
      MeasurementType measurementType, double value) {
    this.sensorEntity = sensorEntity;
    this.measurementType = measurementType;
    this.timeStamp = timeStamp;
    this.value = value;
  }

  public int getId() {
    return id;
  }

  public SensorEntity getSensor() {
    return sensorEntity;
  }

  public void setSensor(SensorEntity sensorEntity) {
    this.sensorEntity = sensorEntity;
  }

  public MeasurementType getMeasurementType() {
    return measurementType;
  }

  public void setMeasurementType(MeasurementType measurementType) {
    this.measurementType = measurementType;
  }

  public Date getTimeStamp() {
    return timeStamp;
  }

  public double getValue() {
    return value;
  }

  /* (non-Javadoc)
   * @see java.lang.Object#toString()
   */
  @Override
  public String toString() {
    return "Measurement [id=" + id + ", sensor=" + sensorEntity + ", timeStamp=" + timeStamp
        + ", measurementType="
        + measurementType + ", value=" + value + "]";
  }
}
